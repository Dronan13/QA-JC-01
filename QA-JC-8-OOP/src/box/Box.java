package box;

public class Box {
	
	int width; // элементы класса Box (так называемые глобальные переменные),
	int height; // которые отвечают за ширину, 
	int length; //высоту и длинну коробки, 
	String boxLabel; // а также надпись на ней

	/*
	 * Конструктор класса
	 * Служит для инициализации начальных значений 
	 * Имя конструктора должно соответствовать имени класса в котором он находиться.
	 * Конструктор не имеет перед определение ни слова void ни типа данных
	 */
	
	/* 
	 * Пример пустого(дефолтного) конструктора.
	 * Даже если он в программе явно не описан то всеравно сущестрвует
	 * и принимает вид описанный ниже
	 */
	Box(){
		
	}
	
	/* 
	 * Пример параметризированного конструктора.
	 * При вызове этого конструктора необходимо передать 
	 * три целочисленных параметра и строковый, значение которых в последствии
	 * запишеться в соответствующие глобальные переменные класса
	 */
	Box(int w, int h, int l, String bL){
		width = w; 
		height = h; 
		length = l; 
		boxLabel = bL;
	}
	
	// Третий конструктор для куба
	Box(int len) {
	    width = height = length = len;
	}
	/*
	 * На текущий момент у нас есть два конструктора с одинаковыми именами
	 * Это являеться примером перегрузки методов, где два метода с одним названием выполняют различные 
	 * функции. Но при создании таких перегруженных методов нельзя в них вкладывать одинаковый 
	 * набор параметров (создать конструктор с последовальностью параметров 
	 * int, int, int, String уже не возможно.
	 * Данное понятие перегрузки приминимо для всех методов существующих в классе.
	 * То есть можно создавать любые методы с одинаковым именами, но они должны иметь различные
	 * наборы параметров.  
	 */
	
	/*
	 * Метод при выполнении которого в консоль
	 * выведеться информация о коробке
	 */
	void showInfo(){//void - указывает что метод ничего не возвращает при выполнении
		System.out.println("Box has "+width+"x"+height+"x"+length+" dementions");
		System.out.println("Box labeled as "+boxLabel);
	}
	
	/*
	 * Метод результатом выполнения которого будет целое число,
	 * в данной ситуации это объем коробки
	 */
	int getVolum(){//int - тип данных который возвращает этот метод
		int volum = width*height*length;
		return volum; 
		/*
		 * ключивое слово return обязанно присутствовать в такого рода методах
		 * оно служит для вовращения какого либо результата выволнения метода
		 * Тип переменной/значения которое стоит после слова return должно соответствовать типу
		 * указанному перед объявлением имени метода.
		 */		
	}

}
