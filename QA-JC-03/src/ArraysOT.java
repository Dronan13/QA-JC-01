import java.util.ArrayList;

public class ArraysOT {

	public static void main(String[] args) {
		
		//создание и инициализация массива
		int[] numberArray = new int[10];
		for(int i = 0; i < 10; i++){//цикл для обхода всех элементов массива
									//индекс первого элемента массива всегда 0!!!!numberArray[0]!!!!
		    numberArray[i] = i*i;     //сохраняем в ячейку массива с индексом i значение i*i
		}
		//вывод значений на консоль
		for(int i = 0; i < 10; i++){
		       System.out.println("квадрат числа "+i+" равен "+  numberArray[i]);
		}
		int[] myQuickStartArray = {1, 5, 0};//объявление массива с зарание заданными значениями
		/*
		 * В массиве М из 12 вещественных чисел найти наибольший и наименьший элементы, 
		 * а также среднее арифметическое всех элементов массива. Заменить элементы 
		 * массива, которые меньше среднего арифметического, наименьшим значением, 
		 * а элементы массива, которые больше среднего арифметического – наибольшим значением.
		 */
		//создание и инициализация массива
		int[] myArray = {8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7};

		//объявление переменных для мин и макс значений
		int max = myArray[0]; //присваеваем переменным значение 0го элемента массива,
		int min = myArray[0]; //для избегания работы с неверными числами
		int s = 0;//эта переменная будет хранить сумму
		/* переменная суммы приравнена к нулю для того, что бы при самой операции
		 * суммирования не возникла погрешность результата
		 * Если сумма будет к примеру изначально равна, к примеру 1,
		 * то если присумируем к етой переменной что-либо, сумма будет
		 * равна этому значению +1.
		 * Аналогично при последовательном произведении чисел,
		 * переменную хранящюю произведение изначально приравнивают к 1.
		 */
		for(int i = 0; i < 12; i++){
		    //новый определяем новый макс. элемент
		    if (max < myArray[i]) max = myArray[i];
		    //новый определяем новый мин. элемент
		    if (min > myArray[i]) min = myArray[i];
		    //сумма элементов массива
		    s += myArray[i];
		}
		//ср. арифм; myArray.length - длинна массива
		double sar=(double)s/myArray.length;
		System.out.println("минимальное значение "+min+
							"\nминимальное значение "+max+
							"\nсумма элементов "+s+
							"\nсреднее арифметическое "+sar);
		
		/*В массиве заменим элементы меньше среднего арифметического
		 * минимальным значением, а те что больше максимальным
		 */
		//замена элементов
		for(int i = 0; i < 12; i++){
		    //новый элементов менше ср. ар.
		    if (myArray[i] < sar) myArray[i]=min;
		    //новый элементов больше ср. ар.
		    if (myArray[i] > sar) myArray[i]=max;
		}
		
		//пример вывода массива в формате
		// {а0, а1, а2, а3,..., аn}
		System.out.print("{");
		for(int i = 0; i < myArray.length; i++){
		    //если это последний элемент, то не выводим запятую 
		    if(i==myArray.length-1)//сравневаем i с myArray.length-1 т.к. длина массива n, 
		    					   //но индекс последнего элемента всегда n-1 
		        System.out.print(myArray[i]);
		    //в иных случаях выводим с запятой 
		    else
		        System.out.print(myArray[i]+", ");
		}
		System.out.print("}");

		//Двумерные масивы
		//объявление пустого массива заданной размерности
		int[][] mA;
		mA = new int[2][3];
		//объявление с заранее заданными значениями
		int[][] mB = {
		    {-9,1,0},
		    {4,1,1},
		    {-2,2,-1}
		};
		
		/*
		 * Найти количество отрицательных элементов на главной диагонали матрицы Z. 
		 * Сформировать массив Т из сумм элементов, расположенных в строках 
		 * с отрицательными элементами на главной диагонали исходного массива Z.
		 */

		//задаем массив 3х3
		int[][] Z = {{-9,1,0}, {4,1,1}, {-2,2,-1}};
		int counter=0;//счетчик отрицательных элементов
		for(int i = 0; i<Z.length; i++){
		    if(Z[i][i]<0) counter++; //если элемент массива отрицателен 
		    						 //то увеличиваем счетчик
		}
		
		//задаем одномерный массив размерностью counte для сумм
		int[] T = new int [counter];
		int g=0;//счетчик для массива Т
		for(int i = 0; i<Z.length; i++){
			if(Z[i][i]<0){//определяем ортицательный ли элемент
						  
				int summ=0;  //переменная для сумирования
				for(int j = 0; j<Z[i].length; j++){//перебераем строку 
					summ+=Z[i][j];//суммируем
				}
				T[g]=summ;//присваиваем значение суммы элементу массива Т
				g++;//увеличиваем счетчик массива Т
			}
		}
		//выводим
		System.out.println("Исходный массив:");
		for(int i = 0; i<Z.length; i++){
			for(int j = 0; j<Z[i].length; j++){            
				System.out.print(Z[i][j] + " ");
			}
			System.out.println();
		}
		System.out.println("Количество отрицательных элементов: "+counter);
		System.out.println("Сформированный массив:");
		for (int i = 0; i<T.length; i++){            
		System.out.print(T[i] + " ");
		}
		
		//через ArrayList
		ArrayList <Integer> T1 = new ArrayList<>();//объявляем ArrayList T1 с типом 
		for(int i = 0; i<Z.length; i++){
		    if(Z[i][i]<0){
		        int summ=0;
		        for(int j = 0; j<Z[i].length; j++){
		            summ+=Z[i][j];
		        }
		        T1.add(summ);
		    }
		}
		System.out.println("Исходный массив:");
		for(int i = 0; i<Z.length; i++){
		    for(int j = 0; j<Z[i].length; j++){            
		        System.out.print(Z[i][j] + " ");
		    }
		    System.out.println();
		}
		System.out.println("Количество отрицательных элементов: "+T1.size());
		System.out.println("Сформированный массив:");
		for(int i = 0; i < T1.size(); i++) {   
		    System.out.println(T1.get(i)+" ");
		} 		
		/*
		 * есть строковый массив содержащий ФИО людей,
		 * второй массив содержит номера телефонов. Элементу первого 
		 * массива соответствует аналогичный элемент второго.
		 * 1. Проверить на соответсвие оба массива;
		 * 2. Вывести на екран в какой ячейке находиться FIO_1;
		 * 3. Проверить на соответствие FIO_3 телефона +3-(057)-7333333;
		 * 4. Вывести имена и соответствующие телефоны номеров
		 */
		String[] users = {"FIO_0", "FIO_1", "FIO_2", "FIO_3", "FIO_4"}; 
		String[] telephones = {"+3-(057)-7000000", "+3-(057)-7111111", 
							   "+3-(057)-7222222", "+3-(057)-7313131", 
							   "+3-(057)-7444444"};
		//1. Проверить на соответсвие оба массива;
		if(users.length==telephones.length)
			System.out.println("Оба массива имеют одинаковую длинну");
		else 
			System.out.println("Массивы имеют разную длинну");
		
		//2. Вывести на екран в какой ячейке находиться FIO_1;
		boolean recExists=false;
		String srchFIO ="FIO_1";
		for(int i = 0; i < users.length; i++) { 
			if(users[i].equals(srchFIO)){
				System.out.println(srchFIO+" находиться в ячейке "+i);
				recExists=true;
				break;
			}
		}
		if(recExists==false){
			System.out.println(srchFIO+" не найдена");
		}
		
		//3. Проверить на соответствие FIO_3 телефона +3-(057)-7333333;
		srchFIO ="FIO_3";
		recExists=false;
		String srchTPhone ="+3-(057)-7313131";
		for(int i = 0; i < users.length; i++) {
			if(users[i].equals(srchFIO)){
				if(telephones[i].equals(srchTPhone)){
					recExists=true;
					System.out.println("Записи соответствуют");					
					break;
				}
			}
		}
		if(recExists==false){
			System.out.println("Записи не соответствуют");
		}
		
		//4. Вывести имена и соответствующие телефоны номеров;
		for(int i = 0; i < users.length; i++) {
			System.out.println(users[i]+" - "+telephones[i]);
		}
		
		int[][] u = {
		    {-9,1,0},
		    {4,1,1},
		    {-2,2,-1}
		};
		//вывести на экран все четные элементы
		System.out.println(u.length);
		for(int i = 0; i < 3; i++) {
			for(int j = 0; j < 3; j++) { 
				if(u[i][j]%2==0&&u[i][j]!=0)// % - остаток от деления
					System.out.print(u[i][j]+" ");
			}
		}
		System.out.println();
		
	}

}
